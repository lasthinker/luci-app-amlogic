#=======================================================================================================================
# https://github.com/lasthinker/luci-app-amlogic
# Description: Automatically publish Releases
# Cron: min (0 - 59) / hour (0 - 23) / day of month (1 - 31) / month (1 - 12) / day of week (0 - 6)(Sunday - Saturday)
#=======================================================================================================================

name: Automatically publish Releases

on:
  repository_dispatch:
  workflow_dispatch:
  #schedule:
    #- cron: '0 23 * * *'

env:
  DELETE_RELEASE: true
  DELETE_ARTIFACTS: true
  KEEP_DAY: 1
  KEEP_MININUM_RUNS: 0
  KEEP_MININUM_RELEASE: 1
  TZ: Asia/Jakarta

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/ubuntu-2004-openwrt)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        echo "COMPILE_STARTINGTIME=$(date +"%Y.%m.%d.%H%M")" >> $GITHUB_ENV
        echo "RELEASES_BRANCH=${RELEASES_BRANCH}" >> $GITHUB_ENV
        
    - name: Publish Releases
      id: publish
      if: (!cancelled())
      run: |
        MAKE_PATH=${PWD}
        TMP_IPK_DIR="${MAKE_PATH}/tmp_ipk_dir"
        GITHUB_BUILD_REPOSITORY="lasthinker/amlogic-s9xxx-openwrt"
        [ -d ${TMP_IPK_DIR} ] || mkdir -p ${TMP_IPK_DIR}/releases
        
        echo "01. Ready to download the ipk package."
        IPK_DOWNLOAD_PATH=$(curl -s "https://api.github.com/repos/${GITHUB_BUILD_REPOSITORY}/releases" | grep "browser_download_url" | grep -o "https.*/openwrt_s9xxx_lasthinker_.*/ipk.tar.gz" | head -n 1)
        IPK_DOWNLOAD_NAME="${IPK_DOWNLOAD_PATH##*/}"
        wget -c "${IPK_DOWNLOAD_PATH}" -O "${TMP_IPK_DIR}/${IPK_DOWNLOAD_NAME}" >/dev/null 2>&1 && sync
        
        if [[ "$?" -eq "0" ]]; then
            echo "02.01 Download the ipk.tar.gz file complete."
            sudo tar -xzf ${TMP_IPK_DIR}/${IPK_DOWNLOAD_NAME} -C ${TMP_IPK_DIR}/
            sudo mv -f ${TMP_IPK_DIR}/ipk/luci-app-amlogic_*.ipk ${TMP_IPK_DIR}/releases/
            sudo mv -f ${TMP_IPK_DIR}/ipk/luci-lib-fs_*.ipk ${TMP_IPK_DIR}/releases/

            IPK_VERSION_RELEASE=$( ls ${TMP_IPK_DIR}/releases/luci-app-amlogic* | grep -oE "[0-9]{1,3}.[0-9]{1,3}-[0-9]+" )
            if [ -n ${IPK_VERSION_RELEASE} ]; then
                echo "02.02 The ipk version is [ ${IPK_VERSION_RELEASE} ]"
            else
                echo "02.03 Failed to obtain version information."
            fi

            echo "PACKAGED_OUTPUTPATH=${TMP_IPK_DIR}/releases" >> $GITHUB_ENV
            echo "PACKAGED_OUTPUTDATE=$(date +"%Y.%m.%d.%H%M")" >> $GITHUB_ENV
            echo "PACKAGED_OUTVERSION=${IPK_VERSION_RELEASE}" >> $GITHUB_ENV
            echo "::set-output name=status::success"
        else
            echo "02.04 The ipk.tar.gz file failed to download."
            echo "::set-output name=status::failure"
            exit 1
        fi
        
    - name: Upload ipk to Release
      uses: softprops/action-gh-release@v1
      if: steps.publish.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: ipk_${{ env.PACKAGED_OUTVERSION }}
        tag_name: ${{ env.PACKAGED_OUTVERSION }}
        files: ${{ env.PACKAGED_OUTPUTPATH }}/*
        
    - name: Delete older releases
      uses: dev-drprasad/delete-older-releases@master
      if: env.DELETE_RELEASE == 'true'
      with:
        keep_latest: ${{ env.KEEP_MININUM_RELEASE }}
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Delete older workflow runs and artifacts
      uses: Mattraks/delete-workflow-runs@main
      if: env.DELETE_ARTIFACTS == 'true'
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        repository: ${{ github.repository }}
        retain_days: ${{ env.KEEP_DAY }}
        keep_minimum_runs: ${{ env.KEEP_MININUM_RUNS }}
        
